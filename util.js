// Generated by CoffeeScript 1.7.1

/*
 *  判断变量类型
 *  obj = {}
 *  str = "str"
 *  
 *  console.log obj.isType("obJect")    #true
 *  console.log str.isType("striNg")    #true
 *  console.log str.isType("array")     #false
 *  
 *  console.log obj.isObject()          #true
 *  console.log str.isString()          #true
 *  console.log str.isObject()          #false
 */
var isArray, isFunction, isNumber, isObject, isString, isType, _isType;

_isType = function(type) {
  return function() {
    return {}.toString.call(this) === ("[object " + (type.toLowerCase().replace(/\w/, function(w) {
      return w.toUpperCase();
    })) + "]");
  };
};

Object.prototype.isType = function(type) {
  return _isType(type).call(this);
};

Object.prototype.isObject = _isType("object");

Object.prototype.isString = _isType("string");

Object.prototype.isArray = Array.isArray() || _isType("array");

Object.prototype.isFunction = _isType("function");

Object.prototype.isNumber = _isType("number");


/*
 *  非原生Object.prototype污染方式
 *
 *  a = {}
 *  b = [1,2,3]
 *  console.log isType(a, "object")
 *  console.log isArray(b)
 */

isType = function(ele, type) {
  return _isType(type).call(ele);
};

isObject = function(ele) {
  return _isType("object").call(ele);
};

isString = function(ele) {
  return _isType("string").call(ele);
};

isArray = Array.isArray || function(ele) {
  return _isType("array").call(ele);
};

isFunction = function(ele) {
  return _isType("function").call(ele);
};

isNumber = function(ele) {
  return _isType("number").call(ele);
};


/*
 *  非原生Object.prototype污染方式2
 *
 *  a = {}
 *  str = "string"
 *  console.log isType(a, "object")
 *  console.log isObject(a)
 *  console.log isString(a)
 *  console.log isString(str)
 *  console.log isType(str, "string")
 */

_isType = function(type) {
  return function(obj) {
    return {}.toString.call(obj) === ("[object " + (type.toLowerCase().replace(/\w/, function(w) {
      return w.toUpperCase();
    })) + "]");
  };
};

isType = function(ele, type) {
  return _isType(type)(ele);
};

isObject = _isType("object");

isString = _isType("string");

isArray = _isType("array");

isFunction = _isType("function");

isNumber = _isType("number");
